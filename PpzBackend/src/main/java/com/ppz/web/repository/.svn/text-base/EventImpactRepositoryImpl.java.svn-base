package com.ppz.web.repository;

import java.util.List;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import com.ppz.web.entity.EventImpact;
import com.ppz.web.entity.PossibleEvent;

@Repository(value = "eventImpactRepository")
public class EventImpactRepositoryImpl extends AbstractRepository<EventImpact, Long> implements EventImpactRepository {

	public Class<EventImpact> getType() {
		return EventImpact.class;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<EventImpact> getEventImpactListByPossibleEvent(PossibleEvent possibleEvent) {
		DetachedCriteria crit = DetachedCriteria.forClass(EventImpact.class).add(Restrictions.eq("possibleEvent", possibleEvent));
		@SuppressWarnings("rawtypes")
		List results = getTemplate().findByCriteria(crit);
		if (results.size() != 0) {
			return (List<EventImpact>) results;
		} else {
			return null;
		}
	}
}
