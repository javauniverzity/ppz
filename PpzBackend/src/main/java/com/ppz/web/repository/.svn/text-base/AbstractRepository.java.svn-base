package com.ppz.web.repository;

import java.io.Serializable;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
import org.springframework.stereotype.Repository;

@Repository
public abstract class AbstractRepository<T, ID extends Serializable> extends HibernateDaoSupport implements GenericRepository<T, ID> {
	
	@Autowired
	public void setTemplate(HibernateTemplate template) {
		setHibernateTemplate(template);
	}

	public HibernateTemplate getTemplate() {
		return getHibernateTemplate();
	}

	//
	// Define basic CRUD operations
	//

	/**
	 * Create and save object
	 * 
	 * @param o
	 *            - object to persist
	 */
	public void create(T o) {
		getTemplate().persist(o);
	}

	/**
	 * Get object specified by id
	 * 
	 * @param id
	 * 
	 * @return object specified by id
	 */
	public T getByID(ID id) {
		return getTemplate().get(getType(), id);
	}

	/**
	 * Update changed entity
	 * 
	 * @param o
	 *            - object with changes to persist
	 */
	public T update(T o) {
		return getTemplate().merge(o);
	}

	/**
	 * Delete entity
	 * 
	 * @param o
	 *            - object to delete
	 */
	public void delete(T o) {
		getTemplate().delete(o);
	}

	//
	// Additional operations
	//
	public List<T> getList() {
		return getTemplate().loadAll(getType());
	}

}
